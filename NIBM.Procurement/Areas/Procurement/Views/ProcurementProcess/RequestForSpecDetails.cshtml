@using NIBM.Procurement
@model NIBM.Procurement.Areas.Procurement.Models.ProcuremenetRequestVM

@{
    ViewBag.Title = "Requested Specifications Details";
}

<div class="card shadow mt-3">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Procurement Request Details</h6>
    </div>
    <div class="card-body px-5 pb-5">
        <div class="form-horizontal">
            <div class="form-group row">
                <br />
                @using (Html.BeginForm())
                {
                    @Html.HiddenFor(model => model.ProReqID)
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.LabelFor(model => model.SpecRequstedFromName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.SpecRequstedFromName)
                            </div>
                            @Html.LabelFor(model => model.SpecRequestedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.SpecRequestedOn)
                            </div>
                        </div>
                        <br />
                        <div class="form-group row">
                            @Html.LabelFor(model => model.RequestBY, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.RequestBY)
                            </div>
                            @Html.LabelFor(model => model.ReqSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.ReqSubject)
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.Description)
                            </div>
                            @Html.LabelFor(model => model.DivHeadName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DetailsViewFor(model => model.DivHeadName)
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="form-group row">
                        @if (!Model.AttachmentLink.IsBlank())
                        {
                            var Attachment = "Request Specification";
                            @Html.LabelFor(model => Attachment, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <a href=@Model.AttachmentLink class="btn btn-primary" target="_blank"><span class='bi bi-search'></span> View</a>
                                @*@Html.ActionLink("View", "GetAttachment", new { id = Model.ProReqID }, new { @class = "bi bi-download", style = "min-width:75px" })*@
                            </div>
                        }
                    </div>
                    @*<div class="form-group row">
                            @if ((Model.Status == ProcurementReqStatus.ItemReceived) && (!Model.IsTile))
                            {
                                @Html.LabelFor(model => model.UserFeedback, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.UserFeedback, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                                    @Html.ValidationMessageFor(model => model.UserFeedback, "", new { @class = "text-danger" })
                                </div>
                            }
                        </div>*@
                }
            </div>
        </div>
    </div>
</div>
<br />
<div class="card shadow">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Item List</h6>
    </div>
    <div class="card-body px-5 pb-5">
        <div id="ChildContent">
            @{ Html.RenderAction("ChildIndex", new { id = Model.ProReqID }); }
        </div>
    </div>
</div>
<div>
    <br /><br />@Html.ActionLink("Back to Index", "ProcurementProcessIndex", "ProcurementProcess", new { area = "Procurement", numericVar1 = 2 }, null)
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/procurement/procurement")
}
