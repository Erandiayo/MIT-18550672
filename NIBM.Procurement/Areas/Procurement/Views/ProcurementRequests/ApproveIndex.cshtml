

@model NIBM.Procurement.Common.BaseViewModel<NIBM.Procurement.Areas.Procurement.Models.ProcuremenetRequestVM>

@{
    ViewBag.Title = "Procurement Requests Approve";
    var grid = Model.GetGrid();
}

@{
    var srchOpts = new List<SelectListItem>();
    srchOpts.Add(new SelectListItem { Text = "Subject", Value = "ReqSubject" });
    srchOpts.Add(new SelectListItem { Text = "Description", Value = "Description" });
    srchOpts.Add(new SelectListItem { Text = "Status", Value = "Status" });
    srchOpts.Add(new SelectListItem { Text = "Requested By", Value = "EmpName" });
    srchOpts.Add(new SelectListItem { Text = "Divisional Head", Value = "DivHeadName" });

}

<p>
    @Html.ActionLink("Create", "Create", null, new { @class = "btn btn-primary", style = "min-width:75px" })
</p>

@using (Html.BeginForm("Index", "Event", FormMethod.Get))
{
    <div class="form-horizontal row">
        <div class="col-md-4">
            <div class="form-group row">
                @Html.Label("Search By", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("FilterBy", new SelectList(srchOpts, "Value", "Text"), htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group row">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Filter, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <input type="submit" value="Search" name="Search" class="btn btn-secondary" />
        </div>
    </div>
    <br />

    <div id="content">
        @grid.GetHtml(
        tableStyle: "table table-hover no-foot",
        mode: WebGridPagerModes.All,
        columns: grid.Columns(
            grid.Column(null, null, format: (item) => Html.NoEncodeActionLink("<span class='bi bi-search' style='color:black'></span>", "View Details", "ApproveDetails", routeValues: new { id = item.ProReqID}, htmlAttributes: new { @class = "btn btn-default btn-sm" }), style: "btn-1"),
            grid.SortColumn(columnName: "ReqSubject", header: "Subject"),
            grid.SortColumn(columnName: "Description", header: " Description"),
            grid.SortColumn(columnName: "EmpName", header: "Requested By"),
            grid.SortColumn(columnName: "ReqDate", header: "Requested Date", format: (item) => item.ReqDate.ToString("yyyy-MM-dd")),
            grid.SortColumn(columnName: "DivHeadName", header: "Divisional Head"),
            grid.SortColumn(columnName: "Status", header: "Status", format: (item) => ((Enum)item.Status).ToEnumChar())))
        <div id="content-footer">
            @grid.PagerList(WebGridPagerModes.All, Model.PageSize, Model.TotalRecords)
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/Program/eventallocation")
}