@model NIBM.Procurement.Areas.Admin.Models.EmployeeVM

@{
    ViewBag.Title = "Create Employee";
}

@using (Html.BeginForm())
{

    <div class="form-horizontal">
        <br />
        <p>
            <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.RequiredLabelFor(model => model.EPFNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EPFNo, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                @Html.ValidationMessageFor(model => model.EPFNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group row">
            @Html.RequiredLabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PopUpSelectorFor(model => model.BranchID, "Base", "Data", "GetBranches", new { @class = "form-select form-select-sm form-control form-control-sm rounded-pill" }, "Please select a Branch", dspFormat: "{1}", hiddenIndices: "0", dataParas: new { fromBranchDept = true })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.RequiredLabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PopUpSelectorFor(model => model.DepartmentID, "Base", "Data", "GetDepartments", new { @class = "form-select form-select-sm form-control form-control-sm rounded-pill" }, "Please select a Department", dspFormat: "{1}", popUpWidth: 400, hiddenIndices: "0", dataParas: new { fromBranchDept = true, branchID = Model.BranchID })
                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.RequiredLabelFor(model => model.DesignationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PopUpSelectorFor(model => model.DesignationID, "Base", "Data", "GetDesignations", new { @class = "form-select form-select-sm form-control form-control-sm rounded-pill" }, "Please select a Designation", dspFormat: "{1}", popUpWidth: 400, hiddenIndices: "0")
                @Html.ValidationMessageFor(model => model.DesignationID, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group row">
            @Html.LabelFor(model => model.ImmediateSupervisor1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PopUpSelectorFor(model => model.ImmediateSupervisor1, "Base", "Data", "GetEmployees", new { @class = "form-select form-select-sm form-control form-control-sm rounded-pill" }, "Please select an Employee", dspFormat: "{1}", hiddenIndices: "0,3,4,5,6")
                @Html.ValidationMessageFor(model => model.ImmediateSupervisor1, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group row">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.Status, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    <span class="bi bi-person-circle" style="font-size:17px;color:limegreen;"></span>&nbsp;&nbsp;Personal Information<span style="color:red;">&nbsp;*</span>
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EnumEditorFor(model => model.Title, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        @Html.RequiredLabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.RequiredLabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                            @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
                        </div>
                        @Html.RequiredLabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control form-control-sm rounded-pill" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EnumEditorFor(model => model.Gender, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
    </div>
    <br />
}
<div>
    <br /><br />@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/bootstrapbundleminjs")
    @Scripts.Render("~/Content/bootstrapmin")
    @Scripts.Render("~/bundles/admin/employee")
}