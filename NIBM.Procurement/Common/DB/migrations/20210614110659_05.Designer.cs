// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIBM.Procurement.DB;

namespace NIBM.Procurement.common.db.migrations
{
    [DbContext(typeof(dbNIBMContext))]
    [Migration("20210614110659_05")]
    partial class _05
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNo_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo_2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchID = 1,
                            Address = "120/5, Wijerama Mawatha, Colombo 07",
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Colombo",
                            FaxNo_1 = "+94 11 2667769",
                            FaxNo_2 = "+94 11 2685808",
                            Status = 1,
                            TelNo_1 = "+94 115 321 000 - 30",
                            TelNo_2 = "+94 11 2693404"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.BranchDepartment", b =>
                {
                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNo_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo_2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID", "DepartmentID");

                    b.HasIndex("DepartmentID")
                        .HasName("IX_FK_DepartmentBranchDepartment");

                    b.ToTable("BranchDepartments");

                    b.HasData(
                        new
                        {
                            BranchID = 1,
                            DepartmentID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FaxNo_1 = "0112667769",
                            FaxNo_2 = "0112667769",
                            Status = 1,
                            TelNo_1 = "0112667769",
                            TelNo_2 = "0112667769"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MIS",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Designation", b =>
                {
                    b.Property<int>("DesignationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("DesignationID");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            DesignationID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consultant"
                        },
                        new
                        {
                            DesignationID = 2,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Director-SOCE"
                        },
                        new
                        {
                            DesignationID = 3,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Director-HRM"
                        },
                        new
                        {
                            DesignationID = 4,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Director General"
                        },
                        new
                        {
                            DesignationID = 5,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Head-Procurement"
                        },
                        new
                        {
                            DesignationID = 6,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Management Assistant"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("DesignationID")
                        .HasColumnType("int");

                    b.Property<int>("EPFNo")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("ImmediateSupervisor1")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NICNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubDeptId")
                        .HasColumnType("int");

                    b.Property<string>("TelNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DesignationID")
                        .HasName("IX_FK_DesignationEmployee");

                    b.HasIndex("EPFNo")
                        .IsUnique()
                        .HasName("UC_EmployeeEPFNo");

                    b.HasIndex("ImmediateSupervisor1")
                        .HasName("IX_FK_EmployeeEmployee");

                    b.HasIndex("SubDeptId")
                        .HasName("IX_FK_SubDepartmentEmployee");

                    b.HasIndex("BranchID", "DepartmentID")
                        .HasName("IX_FK_BranchDepartmentEmployee");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            BranchID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1988, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            DesignationID = 2,
                            EPFNo = 992,
                            FirstName = "Gangani",
                            FullName = "Gangani Wickramasinghe",
                            Gender = 1,
                            Initials = "G C",
                            LastName = "Wikramasinghe",
                            MiddleName = "",
                            MobileNo_1 = "0712496994",
                            NICNo = "885312322V",
                            OfficialEmail = "b@gmail.com",
                            Status = 1,
                            Title = 4
                        },
                        new
                        {
                            EmployeeID = 2,
                            BranchID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1988, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            DesignationID = 1,
                            EPFNo = 1584,
                            FirstName = "Erandi",
                            FullName = "Erandi Ayodya Rathnayaka",
                            Gender = 1,
                            ImmediateSupervisor1 = 1,
                            Initials = "R M E A",
                            LastName = "Rathnayaka",
                            MiddleName = "Ayodya",
                            MobileNo_1 = "0712496994",
                            NICNo = "885312322V",
                            OfficialEmail = "b@gmail.com",
                            Status = 1,
                            Title = 4
                        },
                        new
                        {
                            EmployeeID = 3,
                            BranchID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1988, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            DesignationID = 4,
                            EPFNo = 450,
                            FirstName = "Ananda",
                            FullName = "Ananda Kulasooriya",
                            Gender = 1,
                            Initials = "D M A",
                            LastName = "Kulasooriya",
                            MiddleName = "",
                            MobileNo_1 = "0712496994",
                            NICNo = "885312322V",
                            OfficialEmail = "b@gmail.com",
                            Status = 1,
                            Title = 4
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplaySeq")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentMenuID")
                        .HasColumnType("int");

                    b.Property<int>("Reporttype")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.HasIndex("ParentMenuID")
                        .HasName("IX_FK_MenuMenu");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Branches",
                            DisplaySeq = 10,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Branches",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 2,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Departments",
                            DisplaySeq = 20,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Departments",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 3,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "BranchDepartments",
                            DisplaySeq = 30,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Branch Departments",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 4,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "SubDepartment",
                            DisplaySeq = 40,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Sub Departments",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 5,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Designations",
                            DisplaySeq = 50,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Designations",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 6,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Employees",
                            DisplaySeq = 60,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Employees",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 7,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "UserRoles",
                            DisplaySeq = 70,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "User Roles",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 8,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Users",
                            DisplaySeq = 80,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Users",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 9,
                            Action = "Index",
                            Area = "Procurement",
                            Controller = "ProcurementRequests",
                            DisplaySeq = 90,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Procurement Request",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 10,
                            Action = "Requests",
                            Area = "Procurement",
                            Controller = "ProcurementRequests",
                            DisplaySeq = 100,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Approve Requests",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 11,
                            Action = "Requests",
                            Area = "Procurement",
                            Controller = "ProcurementRequests",
                            DisplaySeq = 110,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Procurement Department Process",
                            Type = "I"
                        },
                        new
                        {
                            MenuID = 12,
                            Action = "ProcurementRequestSummaryReport",
                            Area = "Procurement",
                            Controller = "Reports",
                            DisplaySeq = 120,
                            IsHide = false,
                            Reporttype = 0,
                            Text = "Procurement Request Summary",
                            Type = "I"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Parameter", b =>
                {
                    b.Property<int>("ParameterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParameterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterID");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            ParameterID = 1,
                            ParameterCode = "DG_EmployeeID",
                            ParameterValue = "1"
                        },
                        new
                        {
                            ParameterID = 2,
                            ParameterCode = "HRM_AO",
                            ParameterValue = "1"
                        },
                        new
                        {
                            ParameterID = 3,
                            ParameterCode = "HRM_DD",
                            ParameterValue = "1"
                        },
                        new
                        {
                            ParameterID = 4,
                            ParameterCode = "HRM_MA",
                            ParameterValue = "1"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.ProcuremenetRequest", b =>
                {
                    b.Property<int>("ProReqID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmountPurchased")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AttachmentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DGAppORRejDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DivHeadAppORRejDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DivisionHead")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HRAppRecommendORRejDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProcDeptReceivedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProcessType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcurementProcessStartedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecommenedSpecification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReqBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReqDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReqItemCateory")
                        .HasColumnType("int");

                    b.Property<string>("ReqSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SpecRecomnedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SpecRecomnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProReqID");

                    b.HasIndex("DivisionHead")
                        .HasName("IX_FK_DivHeadProcuremenetRequest");

                    b.HasIndex("ReqBy")
                        .HasName("IX_FK_EmployeeProcuremenetRequest");

                    b.ToTable("ProcuremenetRequests");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.ProcurementReqItem", b =>
                {
                    b.Property<int>("ProReqItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProReqId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReqQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProReqItemID");

                    b.HasIndex("ItemCategoryId")
                        .HasName("IX_FK_ItemCategoryProcurementReqItem");

                    b.HasIndex("ProReqId")
                        .HasName("IX_FK_ProcuremenetRequestProcurementReqItem");

                    b.ToTable("ProcurementReqItems");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Code = "Admin",
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.RoleMenuAccess", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "MenuID");

                    b.HasIndex("MenuID");

                    b.ToTable("RoleMenuAccesses");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.SubDepartment", b =>
                {
                    b.Property<int>("SubDeptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SubDeptID");

                    b.HasIndex("DeptID")
                        .HasName("IX_FK_DepartmentSubDepartment");

                    b.ToTable("SubDepartments");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.TECMember", b =>
                {
                    b.Property<int>("TECMemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProcReqId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TenderID")
                        .HasColumnType("int");

                    b.HasKey("TECMemberID");

                    b.HasIndex("EmployeeId")
                        .HasName("IX_FK_TecMemberEmployee");

                    b.HasIndex("TenderID");

                    b.ToTable("TECMembers");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Tender", b =>
                {
                    b.Property<int>("TenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ItemReceivedByVendorOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProcReqId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SelectedVendorId")
                        .HasColumnType("int");

                    b.Property<string>("TECReportAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TecApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TecTeamAssigedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TenderBoardApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TenderClosedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TenderOpenedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TenderStatus")
                        .HasColumnType("int");

                    b.HasKey("TenderID");

                    b.HasIndex("ProcReqId")
                        .IsUnique();

                    b.HasIndex("SelectedVendorId")
                        .HasName("IX_FK_TenderVendors");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("BranchID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeID")
                        .HasName("IX_FK_EmployeeUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedBy = "ERANDI_PC\\erandi",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = 3,
                            Password = "1",
                            Status = 1,
                            UserName = "erandi"
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleID = 1,
                            RoleID = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavVendorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderID")
                        .HasColumnType("int");

                    b.HasKey("VendorID");

                    b.HasIndex("TenderID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.BranchDepartment", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Branch", "Branch")
                        .WithMany("BranchDepartments")
                        .HasForeignKey("BranchID")
                        .HasConstraintName("FK_BranchBranchDepartment")
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.Department", "Department")
                        .WithMany("BranchDepartments")
                        .HasForeignKey("DepartmentID")
                        .HasConstraintName("FK_DepartmentBranchDepartment")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Employee", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationID")
                        .HasConstraintName("FK_DesignationEmployee")
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.Employee", "Supervisor1")
                        .WithMany("InverseImmediateSupervisor1Navigation")
                        .HasForeignKey("ImmediateSupervisor1")
                        .HasConstraintName("FK_EmployeeEmployee");

                    b.HasOne("NIBM.Procurement.DB.Entities.SubDepartment", "SubDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("SubDeptId")
                        .HasConstraintName("FK_SubDepartmentEmployee");

                    b.HasOne("NIBM.Procurement.DB.Entities.BranchDepartment", "BranchDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("BranchID", "DepartmentID")
                        .HasConstraintName("FK_BranchDepartmentEmployee")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Menu", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Menu", "ParentMenu")
                        .WithMany("InverseParentMenu")
                        .HasForeignKey("ParentMenuID")
                        .HasConstraintName("FK_MenuMenu");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.ProcuremenetRequest", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Employee", "DivHead")
                        .WithMany("ProcuremenetRequestsDivisionHeadNavigation")
                        .HasForeignKey("DivisionHead")
                        .HasConstraintName("FK_DivHeadProcuremenetRequest")
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.Employee", "Employee")
                        .WithMany("ProcuremenetRequestsReqByNavigation")
                        .HasForeignKey("ReqBy")
                        .HasConstraintName("FK_EmployeeProcuremenetRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.ProcurementReqItem", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.ProcuremenetRequest", "ProReq")
                        .WithMany("ProcurementReqItems")
                        .HasForeignKey("ProReqId")
                        .HasConstraintName("FK_ProcuremenetRequestProcurementReqItem")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.RoleMenuAccess", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Menu", "Menu")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("MenuID")
                        .HasConstraintName("FK_MenuRoleMenuAccess")
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.Role", "Role")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("RoleID")
                        .HasConstraintName("FK_RoleRoleMenuAccess")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.SubDepartment", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Department", "Department")
                        .WithMany("SubDepartments")
                        .HasForeignKey("DeptID")
                        .HasConstraintName("FK_DepartmentSubDepartment");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.TECMember", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Employee", "Employee")
                        .WithMany("TECMembers")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Employee_TECMembers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.Tender", "Tender")
                        .WithMany("TECMembers")
                        .HasForeignKey("TenderID");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Tender", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.ProcuremenetRequest", "ProcuremenetRequest")
                        .WithOne("Tender")
                        .HasForeignKey("NIBM.Procurement.DB.Entities.Tender", "ProcReqId")
                        .HasConstraintName("FK_Tender_ProcuremenetRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.User", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchID");

                    b.HasOne("NIBM.Procurement.DB.Entities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("NIBM.Procurement.DB.Entities.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeID")
                        .HasConstraintName("FK_EmployeeUser");
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.UserRole", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .HasConstraintName("FK_RoleUserRole")
                        .IsRequired();

                    b.HasOne("NIBM.Procurement.DB.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_UserUserRole")
                        .IsRequired();
                });

            modelBuilder.Entity("NIBM.Procurement.DB.Entities.Vendor", b =>
                {
                    b.HasOne("NIBM.Procurement.DB.Entities.Tender", "Tender")
                        .WithMany("Vendors")
                        .HasForeignKey("TenderID")
                        .HasConstraintName("FK_Tender_Vendors")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
